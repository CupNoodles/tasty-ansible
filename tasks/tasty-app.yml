---

- name: create the install directory if it doesn't exist
  file:
    path: "{{ install_location }}"
    mode: 0775
    state: directory
    owner: "www-data"
    group: "www-data"
  become: true

- name: Check if TastyIgniter project already exists
  stat:
    path: "{{ install_location }}/composer.json"
  register: ti_composer_json

- name: clear out the install directory if it exists (required if nginx is installed and install_location is default /var/www/html/)
  file: 
    state: absent
    path: "{{install_location}}"
  when: not ti_composer_json.stat.exists

- name: re-create the directory since we just removed it
  file: 
    state: directory
    path: "{{install_location}}"
    owner: "www-data"
    group: "www-data"
    mode: '02775'  #setgid bit is important here! you'll have a bad time with this two-user setup if you forget to set it. 
    recurse: true
  when: not ti_composer_json.stat.exists
  become: true


- name: Download TastyIgniter (composer create-project)
  community.general.composer:
    command: create-project
    composer_executable: /usr/bin/composer
    arguments: "tastyigniter/tastyigniter:{{ti_version_tag}} {{ install_location }} "
    working_dir: "{{ install_location }}"
    prefer_dist: yes
  when: not install_as_git_clone and not ti_composer_json.stat.exists
  become: true
  become_user: "www-data"

- name: create .ssh for www-data
  file:
    path: "/var/www/.ssh"
    mode: 0755
    state: directory
    owner: "www-data"
    group: "www-data"
  become: true
  when: install_as_git_clone and not ti_composer_json.stat.exists


- name: Download TastyIgniter (git clone)
  git:
    accept_hostkey: true
    repo: "{{ti_git_repo}}"
    dest: "{{install_location}}"
    #ssh_opts: "-o UserKnownHostsFile=/dev/null"
  when: install_as_git_clone and not ti_composer_json.stat.exists
  become: true
  become_user: "www-data"

- name: composer install if cloned from git
  community.general.composer:
    command: install
    composer_executable: /usr/bin/composer
    working_dir: "{{ install_location }}"
  when: install_as_git_clone and not ti_composer_json.stat.exists
  become: true
  become_user: "www-data"

- name: Check if .env exists
  stat:
    path: "{{ install_location }}/.env"
  register: ti_env
  become: true
  become_user: "www-data"


- name: create .env file for --no-interaction install
  ansible.builtin.copy:  
    src: "{{ install_location }}/example.env"
    dest: "{{ install_location }}/.env"
    remote_src: yes
  when: not ti_env.stat.exists
  become: true
  become_user: "www-data"


#TODO what else do we need here?
- name: update the information that we know in .env ()
  lineinfile:
    path: "{{ install_location }}/.env"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  with_items:
  - { regexp: '^APP_NAME=.*$', line: 'APP_NAME="{{app_name}}"' }
  - { regexp: '^APP_URL=.*$', line: 'APP_URL="{{app_url}}"' }
  - { regexp: '^DB_HOST=.*$', line: 'DB_HOST="{{mysql_db_host}}"' }
  - { regexp: '^DB_PORT=.*$', line: 'DB_PORT="3306"' }
  - { regexp: '^DB_DATABASE=.*$', line: 'DB_DATABASE="{{mysql_db_name}}"' }
  - { regexp: '^DB_USERNAME=.*$', line: 'DB_USERNAME="{{mysql_user_name}}"' }
  - { regexp: '^DB_PASSWORD=.*$', line: 'DB_PASSWORD="{{mysql_user_password}}"' }
  - { regexp: '^DB_PREFIX=.*$', line: 'DB_PREFIX="ti_"' }
  become: true
  become_user: "www-data"

- name: install TastyIgniter via artisan
  shell: "php artisan igniter:install --no-interaction"
  args:
    chdir: "{{ install_location }}"
  changed_when: false
  become: true
  become_user: "www-data"

- name: optionally disable asset combiner
  lineinfile:
    path: "{{ install_location }}/config/system.php"
    regexp: "'enableAssetCombiner'"
    line: "    'enableAssetCombiner' => FALSE,"
    state: present
  when: disable_combiner


- name: run config:cache
  shell: "php artisan config:cache"
  args:
    chdir: "{{ install_location }}"
  changed_when: false
  become: true
  become_user: "www-data"

- name: chown everything in install_location to www-data
  file: 
    dest: "{{ install_location }}"
    owner: www-data
    group: www-data 
    mode: '02775'  #setgid bit is important here! you'll have a bad time with this two-user setup if you forget to set it. 
    recurse: yes
  become: true

#- name: set system.log to 664
#  file:
#    dest: "{{ install_location }}/storage/logs/system.log"
#    mode: 0664
#  become: true

- name: set up scheduler cron
  cron: 
    name: "Artisan scheduler"
    minute: "*"
    user: "{{ create_deploy_user | ternary(deploy_user, 'www-data') }}"
    job: "php {{ install_location }}/artisan schedule:run >> /dev/null 2>&1"
  become: true


- name: Check whether an app_key is set
  lineinfile:
    path: "{{ install_location }}/.env"
    line: "APP_KEY="
  check_mode: yes
  register: app_key

- name: run artisan key generate
  shell: "php artisan key:generate --show"
  register: new_app_key
  args:
    chdir: "{{ install_location }}"
  when: not app_key.changed

#TODO what else do we need here?
- name: update app_key in .env
  lineinfile:
    path: "{{ install_location }}/.env"
    regexp: "^APP_KEY=$"
    line: "APP_KEY={{new_app_key.stdout}}"
    state: present
  when: not app_key.changed
  become: true
  become_user: "www-data"

- name: artisan config cache
  shell: "php artisan config:cache"
  args:
    chdir: "{{ install_location }}"
  changed_when: false
  become: true
  become_user: "www-data"
  

